package com.springboot.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SpringbootDemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(SpringbootDemoApplication.class, args);
	}
	
	
	
	
	// SPRING BOOT -> concept are similar that's the there in spring, in addition -> spring boot helps us to quickly get started with the development aur kuch jada offer nahi krti spring boot 
		
	// what's the reason of introducing spring boot
	// earlier when the spring boot was not there
	//tab 
	// hota yeh tha ki hmko bhot configurations krni padti thi
	//spring app bnane k liye
	// jese lets say we're using hibernate 
	// toh uska apne ko sessionfactory vgera sab declare krna padta hh manually
	// mtlb configuration bhot jada tha + manually krna padta tha sab
	// example -> componentScan, dispatcherServlet, dataSource and session factory in hibernate/jpa 
	// toh isko automate krne k liye 
	// SPRING BOOT WAS INTRODUCTED
	
	
	
	// BENEFITS OF USING SPRING BOOT over SPRING 
	// 1. AutoConfiguration -> spring boot autoconfigure.jar file sab khud hi kr deti hh
			// jese apan agar spring-boot-starter-web dependency add krenge toh spring boot automatically sab tomcat server, dispatcher servlet, + other things sab kuch set kr deta using springbootautoconfig.jar  
	

	
	
	
	//SPRING BOOT EXECUTION PROCESS
	
	// main() -> firstly main method run hota hh then 
	// run() static method call hota hh joki return krta hh ApplicaitonContext ka obj i.e. nothing but SPRING IOC container
	
			// what the run method does internally -> it performs bootstraping of our spring boot application
				// 1. StopWatch starts -> identify the time taken to bootstrap th esprign boot app
				//2. prepares environment ->  prepares the environment to run our spring boot app (dev, staging , prod, qa)
				//3. print banner - Spring boot logo prints out on console
				//4. start the IOC container - starts the IOC applicationContext container
				// 5. refresh context
				// 6. trigger runners (ApplicationRunner or CommandLineRunner)
				// 7. return applicationContext reference (Spring IOC Container reference will be returned)
	
}
